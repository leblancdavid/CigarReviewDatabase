// <auto-generated />
using System;
using CigarReview.SQLiteDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CigarReview.SQLiteDatabase.Migrations
{
    [DbContext(typeof(CigarReviewContext))]
    [Migration("20211210192646_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("CigarReview.Domain.Cigars.Cigar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BinderId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BrandId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FillerId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Length")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OriginId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RingSize")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShadeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShapeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StrengthId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WrapperId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BinderId");

                    b.HasIndex("BrandId");

                    b.HasIndex("FillerId");

                    b.HasIndex("OriginId");

                    b.HasIndex("ShadeId");

                    b.HasIndex("ShapeId");

                    b.HasIndex("StrengthId");

                    b.HasIndex("WrapperId");

                    b.ToTable("Cigars");
                });

            modelBuilder.Entity("CigarReview.Domain.Cigars.CigarBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CigarBrand");
                });

            modelBuilder.Entity("CigarReview.Domain.Cigars.CigarOrigin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CigarOrigin");
                });

            modelBuilder.Entity("CigarReview.Domain.Cigars.CigarShade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CigarShade");
                });

            modelBuilder.Entity("CigarReview.Domain.Cigars.CigarShape", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CigarShape");
                });

            modelBuilder.Entity("CigarReview.Domain.Cigars.CigarStrength", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CigarStrength");
                });

            modelBuilder.Entity("CigarReview.Domain.Cigars.TobaccoType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TobaccoType");
                });

            modelBuilder.Entity("CigarReview.Domain.Cigars.Cigar", b =>
                {
                    b.HasOne("CigarReview.Domain.Cigars.TobaccoType", "Binder")
                        .WithMany()
                        .HasForeignKey("BinderId");

                    b.HasOne("CigarReview.Domain.Cigars.CigarBrand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("CigarReview.Domain.Cigars.TobaccoType", "Filler")
                        .WithMany()
                        .HasForeignKey("FillerId");

                    b.HasOne("CigarReview.Domain.Cigars.CigarOrigin", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginId");

                    b.HasOne("CigarReview.Domain.Cigars.CigarShade", "Shade")
                        .WithMany()
                        .HasForeignKey("ShadeId");

                    b.HasOne("CigarReview.Domain.Cigars.CigarShape", "Shape")
                        .WithMany()
                        .HasForeignKey("ShapeId");

                    b.HasOne("CigarReview.Domain.Cigars.CigarStrength", "Strength")
                        .WithMany()
                        .HasForeignKey("StrengthId");

                    b.HasOne("CigarReview.Domain.Cigars.TobaccoType", "Wrapper")
                        .WithMany()
                        .HasForeignKey("WrapperId");

                    b.Navigation("Binder");

                    b.Navigation("Brand");

                    b.Navigation("Filler");

                    b.Navigation("Origin");

                    b.Navigation("Shade");

                    b.Navigation("Shape");

                    b.Navigation("Strength");

                    b.Navigation("Wrapper");
                });
#pragma warning restore 612, 618
        }
    }
}
